=== begin_es ===
Ey {get_user_name()}, ¬°tengo algo <b>super</b> interesante para t√≠! He estado aprendiendo un nuevo lenguaje de programaci√≥n para hacer arte interactivo llamado <b>p5.js</b>. La parte "js" proviene de <b>JavaScript</b>. Probablemente hayas o√≠do hablar del mismo antes. Es un lenguaje de programaci√≥n utilizado para correr muchos sitios web.
+ [attracting: ‚ùØ] ‚ùØ
- En esta actividad, el c√≥digo <b>p5.js</b> est√° en el lado izquierdo, y el resultado de ese c√≥digo est√° en el centro. A medida que escribes, el c√≥digo intentar√° ejecutarse constantemente y actualizar√° el √°rea central.
- ¬°Es <b>super</b> importante que escribas el c√≥digo <b>exactamente</b> como te lo mostramos! ¬°Los ordenadores pueden ser muy detallistas con cosas como los espacios! Si cometes alg√∫n error, siempre puedes deshacer (<b>Ctrl + Z</b>), o si se pone realmente malo, puedes reiniciar el c√≥digo completamente con el bot√≥n <b>Reiniciar</b> que se encuentra en la esquina superior derecha.
+ ‚ùØ
- Comencemos con algo simple: ¬øqu√© tal si cambiamos ese color de fondo? Busca la l√≠nea que dice <tt>background(20);</tt> y c√°mbiala para que se lea <tt>background('green');</tt>.
- No olvides el punto y coma ( <b>;</b> ) al final de la l√≠nea, ¬°y presta atenci√≥n a los espacios!
TODO: Replace brute-force checks when we have a better check:
+ [(wait for: code contains "background('green');")]
+ [(wait for: code contains "background('Green');")]
+ [(wait for: code contains "background('GREEN');")]
-
(Hecho)
- -> p5_4_es

=== p5_4_es ===
¬°Buen trabajo! <b>p5.js</b> comprende muchas palabras de colores en ingl√©s. Tambi√©n podr√≠as usar <tt>coral</tt>, <tt>lime</tt> o <tt>midnightblue</tt>, por ejemplo.
+ ‚ùØ
- Ahora, ¬°vayamos un poco m√°s all√° y cambiemos algo del funcionamiento de la ola! Busca la l√≠nea que dice <tt>num = 20;</tt> y cambia  <b>20</b> por <b>5</b>. ¬°No olvides escribir el c√≥digo exactamente como lo ves!
+ [(wait for: code contains "num = 5;")] (Hecho)
- Oh, ¬øA d√≥nde fueron todas nuestras l√≠neas? Intenta cambiar <tt>num</tt> a <b>15</b>.
+ [(wait for: code contains "num = 15;")] (Hecho)
- ¬°Ese es un buen n√∫mero! A continuaci√≥n, cambiemos el espacio entre los arcos. Intenta cambiar <tt>step</tt> a 30.
+ [(wait for: code contains "step = 30;")] (Hecho)
- Hmm, ¬°parece que vamos a necesitar una ventana m√°s grande para contener esa ola! Podemos hacer que el <b><i>canvas</i></b> (lienzo en ingl√©s, ese es el nombre del √°rea en que el programa dibuja las cosas) sea m√°s grande cambiando la l√≠nea que dice <tt>createCanvas(400, 400)</tt>. Esos dos n√∫meros controlan el ancho y la altura del lienzo. As√≠ que hag√°moslo un poco m√°s grande: aumenta el ancho a <b>600</b>.
+ [(wait for: code contains "createCanvas(600, 400);")] (Hecho)
- ¬°Eso se ve mejor! Puedes seguir cambiando el tama√±o, si lo deseas.
- Ahora, cambiemos el grosor de los arcos. Cambia <tt>strokeWeight</tt> de <b>5</b> a <b>10</b>.
+ [(wait for: code contains "strokeWeight(10);")] (Hecho)
- ¬°Bien! Puedes volver a achicar el <tt>strokeWeight</tt>, o cambiarlo por el n√∫mero que m√°s te guste.
- Pasemos a divertirnos con los colores. Busca la l√≠nea que dice <tt>arcColor = 255</tt>.
- Esa <b>variable</b> controla el color de todas las l√≠neas de la ola. ¬°Cambi√©mosla por <b>100</b>, para ver qu√© pasa!
+ [(wait for: code contains "arcColor = 100;")] (Hecho)
- ¬°Ahora tu ola es gris! Si desea que sea azul, verde, o de otro color, necesitamos una forma m√°s compleja de expresar los colores. Es cierto que puedes usar palabras de color en ingl√©s, como has hecho para el fondo, pero tambi√©n puedes describir los colores en t√©rminos de la cantidad de rojo, verde y azul que tienen.
- Por ejemplo, hagamos que la ola sea roja. Cambia la l√≠nea que tiene <b>arcColor</b> a <tt>arcColor = color(255, 0, 0);</tt>. ¬°No olvides verificar los espacios!
TODO: Replace brute-force checks when we have a better check:
+ [(wait for: code contains "arcColor = color(255, 0, 0);")]
+ [(wait for: code contains "arcColor = color(255,0, 0);")]
+ [(wait for: code contains "arcColor = color(255, 0,0);")]
+ [(wait for: code contains "arcColor = color(255,0,0);")]
-
(Hecho)
- -> p5_16_es

=== p5_16_es ===
¬øVes c√≥mo los arcos son rojos? Cambia el color a <tt>(0, 255, 0);</tt> para darnos algunas olas verdes de la suerte.
TODO: Replace brute-force checks when we have a better check:
+ [(wait for: code contains "arcColor = color(0, 255, 0);")]
+ [(wait for: code contains "arcColor = color(0,255, 0);")]
+ [(wait for: code contains "arcColor = color(0, 255,0);")]
+ [(wait for: code contains "arcColor = color(0,255,0);")]
-
(Hecho)
- Ahora intentemos combinar los valores RGB: <tt>color(0, 255, 255);</tt>
TODO: Replace brute-force checks when we have a better check:
+ [(wait for: code contains "arcColor = color(0, 255, 255);")]
+ [(wait for: code contains "arcColor = color(0,255, 255);")]
+ [(wait for: code contains "arcColor = color(0, 255,255);")]
+ [(wait for: code contains "arcColor = color(0,255,255);")]
-
(Hecho)
- ¬°Parece que el verde y el azul hacen un hermoso color verde azulado! Probemos con un color m√°s complejo: me encanta el p√∫rpura que obtienes con <tt>color(150, 0, 255)</tt>
TODO: Replace brute-force checks when we have a better check:
+ [(wait for: code contains "arcColor = color(150, 0, 255);")]
+ [(wait for: code contains "arcColor = color(150,0, 255);")]
+ [(wait for: code contains "arcColor = color(150, 0,255);")]
+ [(wait for: code contains "arcColor = color(150,0,255);")]
-
(Hecho)
- ¬°Gran trabajo! Ahora <b>esas</b> s√≠ que son unas hermosas olas.
- Estamos en una encrucijada: puedes quedarte aqu√≠ y seguir jugando con los colores y lo que hemos aprendido hasta ahora... o podemos avanzar hacia algo m√°s complicado. ¬øC√≥mo suena eso?
* [üëç] ¬°Sigamos!
  -> p5_21_es
* [üëé] ¬°Voy a quedarme aqu√≠ y continuar experimentando!
  ¬°Que te diviertas! Recuerda, siempre puedes reiniciar esta actividad si cambias de opini√≥n.
  -> END

=== p5_21_es ===
De acuerdo, vayamos a algo m√°s complejo. Haremos que los arcos cambien de color solo cuando hagas clic (o toque, si est√°s usando una tableta) en esa parte de la pantalla.
- Primero, envuelve los c√≥digos <tt>doArcs(...</tt> existentes con <tt>if (mouseIsPressed) \{</tt>, y <tt>\}</tt>
- ¬°Recuerda tener mucho cuidado con su espacio! Tu c√≥digo deber√≠a verse as√≠:
{snippet_p5_21()}
TODO: Replace brute-force checks when we have a better check:
+ [(wait for: code contains "if (mouseIsPressed) \{ doArcs(arcColor); \}")]
+ [(wait for: code contains "if(mouseIsPressed)\{ doArcs(arcColor); \}")]
+ [(wait for: code contains "if (mouseIsPressed) \{doArcs(arcColor);\}")]
+ [(wait for: code contains "if(mouseIsPressed)\{doArcs(arcColor);\}")]
+ [(wait for: code contains "if ( mouseIsPressed ) \{ doArcs(arcColor); \}")]
-
(Hecho)
- Bien, una cosa m√°s: agrega una l√≠nea nueva despu√©s de la que acabas de escribir, y escribe <tt>else \{ doArcs(128); \}</tt>

- Si tienes problemas, verifica cuidadosamente que todo lo que hayas escrito est√© en el lugar correcto, y con el espaciado correcto. Tu c√≥digo deber√≠a verse as√≠:
{snippet_p5_22()}
TODO: Replace brute-force checks when we have a better check:
+ [(wait for: code contains "else \{ doArcs(128); \}")]
+ [(wait for: code contains "else\{ doArcs(128); \}")]
+ [(wait for: code contains "else\{doArcs(128);\}")]
+ [(wait for: code contains "else \{doArcs(128);\}")]
-
(Hecho)
- Gran trabajo, ¬°y tambi√©n podemos aplicar la misma idea al color de fondo!
- En la l√≠nea con <tt>doArcs(...</tt>, agrega <tt>background(255);</tt> justo antes de <tt>doArcs(...</tt>
- Ahora tu c√≥digo deber√≠a verse as√≠:
{snippet_p5_23()}
TODO: Replace brute-force checks when we have a better check:
+ [(wait for: code contains "if (mouseIsPressed) \{ background(255); ")]
+ [(wait for: code contains "if(mouseIsPressed)\{ background(255); ")]
+ [(wait for: code contains "if(mouseIsPressed)\{background(255);")]
+ [(wait for: code contains "if (mouseIsPressed) \{background(255);")]
-
(Hecho)
- -> p5_24_es

=== p5_24_es ===
¬øVes lo que hemos hecho aqu√≠? ¬°Utilizamos una declaraci√≥n <b>if</b> para cambiar el comportamiento de este programa dependiendo de lo que el usuario o la usuaria est√© haciendo!
- Si haces clic o tocas el lienzo, <tt>mouseIsPressed</tt> es <b>verdadero</b>, por lo que la instrucci√≥n <i>if</i> salta a la primera secci√≥n del c√≥digo y muestra los arcos con el color que has elegido.
- Si no haces clic ni tocas el lienzo, <tt>mouseIsPressed</tt> es <b>falso</b>, por lo que ejecuta el c√≥digo dentro de la secci√≥n <b>else</b> y los arcos son del otro color.
- Puedes pensar en las declaraciones <b>if</b> como si fueran una oraci√≥n: <i>Si esta prueba es verdadera, haz una cosa. Si no, haz otra cosa.</i>
+ ‚ùØ
- Finalmente, te presentaremos otro comando para usuarios avanzados: la funci√≥n <b>map</b> (mapa en ingl√©s). Las <b>funciones</b> toman algunos datos y generan otros datos. La funci√≥n <b>map</b> toma un conjunto de n√∫meros y los modifica para que se ajuste a otro rango de n√∫meros. En este caso, vamos a utilizar <tt>map()</tt> para que la posici√≥n del rat√≥n controle la velocidad de la ola.
+ ‚ùØ
- Primero, familiaric√©monos con los n√∫meros que cambiaremos. ¬øVes la √∫ltima l√≠nea de nuestro c√≥digo, <tt>theta + = 0.0523;</tt>? Ese n√∫mero controla la velocidad de la ola.
- ¬°El <b>0.0523</b> es un n√∫mero super peque√±o! Intentemos aumentarlo a <tt>0.1</tt>. ¬°Recuerda darle un vistazo a esos espacios!
TODO: Replace brute-force checks when we have a better check:
+ [(wait for: code contains "theta += 0.1;")]
+ [(wait for: code contains "theta +=0.1;")]
+ [(wait for: code contains "theta+=0.1;")]
-
(Hecho)
- Guau, ¬°qu√© r√°pido! ¬øQu√© sucede si lo hacemos mucho m√°s peque√±o que el original? ¬øDigamos, <tt>0.001</tt>?
+ [(wait for: code contains "theta += 0.001;")] (Hecho)
- ¬°Muy lento! Intenta encontrar un buen punto intermedio. O vu√©lvelo a <tt>0.0523</tt>.
+ ‚ùØ
-> p5_29_es

=== p5_29_es ===
Ahora, usemos la funci√≥n de mapa para automatizar las cosas que hicimos en las √∫ltimas instrucciones. ¬°Haremos que la posici√≥n vertical del cursor controle la velocidad de la ola!
- Cambia el n√∫mero despu√©s de <tt>theta +=</tt> a <tt> map(mouseY, height, 0, 0.001, 0.1);</tt>. Como siempre, ten cuidado y aseg√∫rate de que los espacios y los n√∫meros que est√°s escribiendo sean correctos.
TODO: Replace brute-force checks when we have a better check:
+ [(wait for: code contains "theta += map(mouseY, height, 0, 0.001, 0.1);")]
+ [(wait for: code contains "theta += map(mouseY,height,0,0.001,0.1);")]
+ [(wait for: code contains "theta+=map(mouseY, height, 0, 0.001, 0.1);")]
+ [(wait for: code contains "theta+=map(mouseY,height,0,0.001,0.1);")]
-
(Hecho)

- ¬°Echale un vistazo! A medida que mueves el cursor hacia arriba, la ola se acelera. A medida que lo mueves hacia abajo, ¬°se ralentiza! Y por supuesto, a√∫n puede hacer clic o tocar para cambiar los colores.
+ ‚ùØ
- Has navegado por todos esos ejercicios. Por eso, te dar√© una recompensa.
~ set_game_state("quest.P5/complete", true)
~ set_game_state("quests.achievements/p5-complete", true)
* ‚ùØ

- Hemos terminado por el momento, ¬°pero hay mucho m√°s por explorar en <b>p5.js</b>! Si√©ntete libre de cambiar cualquiera de las variables que has aprendido, y juega con el c√≥digo todo lo que quieras. Si deseas continuar con m√°s actividades como esta, ¬°tengo un conjunto completo disponible en Hack para Endless OS!
-Puedes aprender a usar figuras complejas, n√∫meros aleatorios, herramientas de programaci√≥n como variables y bucles, e incluso "pintar" con sonido o crear tus propios juegos. ¬°Me encantar√≠a verte all√≠!
-> END
